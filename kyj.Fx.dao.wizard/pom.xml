<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>kyj.Fx.dao.wizard</groupId>
	<artifactId>kyj.Fx.dao.wizard</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>kyj.Fx.dao.wizard</name>
	<url>http://maven.apache.org</url>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Logging -->
		<logback.version>1.0.13</logback.version>
		<slf4j.version>1.7.5</slf4j.version>
		<java.version>1.8</java.version>
		<deploy.target.dir>${user.home}/.m2/repository/kyj/Fx/dao/wizard/kyj.Fx.dao.wizard/0.0.1-SNAPSHOT</deploy.target.dir>
		<!-- 2015.12.10 mar버젼에서 인식이 불가능한 상황이 발생하면서, 추가함. 정확한 원인은 모르겟음.
			실행하는데는 문제없으나 jar파일처리시 문제.
		-->
		<vo.editor.jar.path.name>${user.home}/.m2/repository/kyj/FxVoEditor/kyj.FxVoEditor/0.0.1-SNAPSHOT/kyj.FxVoEditor-0.0.1-SNAPSHOT.jar</vo.editor.jar.path.name>
		<lib.dir>lib</lib.dir>
		<jar.name>kyj.fx.dao.wizard-0.0.1-SNAPSHOT</jar.name>
	</properties>

	<build>

		<!-- <sourceDirectory>src/main/java</sourceDirectory> <testSourceDirectory>src/main/test</testSourceDirectory> -->
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>

				<configuration>
					<finalName>${jar.name}</finalName>
					<!-- jar 파일이 생성될 폴더 -->
					<outputDirectory>${deploy.target.dir}</outputDirectory>
					<archive>
						<manifest>
							<!-- public static void main() 함수가 있는 클래스 지정 -->
							<!-- <mainClass>oasyss.Main</mainClass> -->

							<!-- jar 파일 META-INF/MANIFEST.MF 에 클래스패스 정보 추가 -->
							<addClasspath>true</addClasspath>

							<!-- 클래스패스에 추가시 prefix 설정 ex) log4j-1.2.16.jar -> lib/log4j-1.2.16.jar
								로 추가됨 -->
							<classpathPrefix>${lib.dir}/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- package 실행할때 프로젝트 디펜던시들을 특정폴더로 복사해주게 설정 -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-dependency-plugin</artifactId> -->
			<!-- <version>2.3</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>copy-dependencies</id> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>copy-dependencies</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- <configuration> -->
			<!-- <outputDirectory>${deploy.target.dir}/${lib.dir}</outputDirectory> -->
			<!-- <overWriteIfNewer>true</overWriteIfNewer> -->
			<!-- </configuration> -->
			<!-- </plugin> -->


			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-dependency-plugin</artifactId> -->
			<!-- <version>2.6</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>copy-dependencies</id> -->
			<!-- <phase>compile</phase> -->
			<!-- <goals> -->
			<!-- <goal>copy-dependencies</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <outputDirectory>${project.deploymentdir}/lib</outputDirectory> -->
			<!-- <overWriteReleases>false</overWriteReleases> -->
			<!-- <overWriteSnapshots>false</overWriteSnapshots> -->
			<!-- <overWriteIfNewer>true</overWriteIfNewer> -->
			<!-- <includeScope>runtime</includeScope> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

		</plugins>
	</build>





	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- Logging with SLF4J & LogBack -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>ch.qos.logback</groupId> -->
		<!-- <artifactId>logback-classic</artifactId> -->
		<!-- <version>${logback.version}</version> -->
		<!-- <scope>runtime</scope> -->
		<!-- </dependency> -->



		<dependency>
			<groupId>kyj.FxVoEditor</groupId>
			<artifactId>kyj.FxVoEditor</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>system</scope>
			<systemPath>${vo.editor.jar.path.name}</systemPath>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>My-Project</id>
			<name>My-Project Custom Jars</name>
			<url>file://${project.basedir}/lib</url>
		</repository>
	</repositories>
</project>
